@model EditForumPostModel
@using Nop.Core.Domain.Forums;
@{
    //page class
    Html.AppendPageCssClassParts("html-forum-edit-page");
}

@await Component.InvokeAsync("ForumBreadcrumb", new { forumTopicId = Model.ForumTopicId })
<div class="page forum-edit-page from-panel">
    <div class="page-title panel-heading">
        @if (Model.IsEdit)
        {
            <h1>@T("Forum.EditPost")</h1>
        }
        else
        {
            <h1>@T("Forum.NewPost")</h1>
        }
    </div>
    <div class="page-body panel-body">
        <div asp-validation-summary="ModelOnly" class="message-error"></div>
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="ForumTopicId" />
        <div class="form-fields">
        <fieldset>
            <legend>@T("Forum.ForumName"): <strong>@Model.ForumName</strong></legend>
            <div class="form-group">
                <label class="control-label topic-title-text col-md-4">@T("Forum.TopicTitle"):</label> <span class="col-md-5">@Model.ForumTopicSubject</span>
            </div>

            <div class="form-group row">
                <div class=" col-md-5">
                    @if (Model.ForumEditor == EditorType.BBCodeEditor)
                    {
                        <nop-bb-code-editor asp-for="Text" />
                    }
                    <textarea asp-for="Text" class="forum-post-text form-control"></textarea>
                    <span asp-validation-for="Text"></span>   
                </div>
            </div>
            @if (Model.IsCustomerAllowedToSubscribe)
            {
                <div class="form-group">
                    <div class="col-sm-10 col-md-5 col-md-offset-4">
                        <label class="checkbox options-checkbox">
                            <input asp-for="Subscribed" />
                            <span asp-for="Subscribed">@T("Forum.NotifyWhenSomeonePostsInThisTopic")</span>
                        </label>
                    </div>
                </div>
            }
            @if (Model.DisplayCaptcha)
            {
                <div class="form-group">
                    <div class="captcha-box col-sm-offset-4 col-md-offset-4 col-md-8">
                        <nop-captcha class="g-recaptcha" />
                    </div>
                </div>
            }
            <div class="form-group form-submit">
                <div class="col-md-offset-4 col-md-5 submit-option">
                    <button type="submit" class="btn btn-primary submit-post-button">@T("Forum.Submit")</button>
                    <button type="button" class="btn btn-default cancel-post-button" onclick="setLocation('@Url.RouteUrl("TopicSlug", new { id = Model.ForumTopicId, slug = Model.ForumTopicSeName })')">@T("Forum.Cancel")</button>
                </div>
            </div>
        </fieldset>
        </div>
    </div>
</div>
