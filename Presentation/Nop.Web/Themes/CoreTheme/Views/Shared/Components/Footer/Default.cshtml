@model FooterModel

@using Nop.Core
@using Nop.Core.Domain.Tax

@inject IWorkContext workContext

<div class="footer">
    <div class="footer-top">
        <div class="footer-zone row">
            <div class="column information col-sm-3 col-md-3">
                <h3>@T("Footer.Information")</h3>
                <ul class="nav nav-list">
                    @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                    }
                    @if (Model.DisplayContactUsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                    }
                </ul>
            </div>
            <div class="column customer-service col-sm-3 col-md-3">
                <h3>@T("Footer.CustomerService")</h3>
                <ul class="nav nav-list">
                    @if (Model.SearchEnabled && Model.DisplayProductSearchFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a> </li>
                    }
                    @if (Model.NewsEnabled && Model.DisplayNewsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("NewsArchive")">@T("News")</a></li>
                    }
                    @if (Model.BlogEnabled && Model.DisplayBlogFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
                    }
                    @if (Model.ForumEnabled && Model.DisplayForumsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
                    }
                    @if (Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
                    }
                    @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                    }
                    @if (Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                    }
                    @if (Model.AllowCustomersToCheckGiftCardBalance)
                    {
                        <li><a href="@Url.RouteUrl("CheckGiftCardBalance")">@T("CheckGiftCardBalance")</a></li>
                    }
                </ul>
            </div>
            <div class="column my-account col-sm-3 col-md-3">
                <h3>@T("Footer.MyAccount")</h3>
                <ul class="nav nav-list">
                    @if (Model.DisplayCustomerInfoFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                    }
                    @if (Model.DisplayCustomerOrdersFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                    }
                    @if (Model.DisplayCustomerAddressesFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                    }
                    @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li>
                    }
                    @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                    }
                    @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                    }
                </ul>
            </div>
            <div class="column follow-us col-sm-3 col-md-3">
                <h3>@T("Footer.FollowUs")</h3>
                @await Component.InvokeAsync("SocialButtons")
                <div class="newsletter">
                    @await Component.InvokeAsync("NewsletterBox")
                </div>
            </div>
        </div>
    </div>
    <div class="footer-bottom">
        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-6">
                <div class="footer-information">
                    @*<span class="footer-disclaimer">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</span>                <div class="poweredby">*@
                    @if (Model.DisplayTaxShippingInfoFooter)
                    {
                        var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax;
                        <span class="footer-tax-shipping">
                            @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = await Html.GetTopicSeNameAsync("shippinginfo") }))
                        </span>
                    }
                </div>
                @if (!Model.HidePoweredByNopCommerce)
                {
                    <div class="poweredby">
                        @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
                            Please find more info at https://www.nopcommerce.com/nopcommerce-copyright-removal-key*@
                        Powered by <a href="@(OfficialSite.Main)">nopCommerce</a>
                    </div>
                }
            </div>
            <div class="col-xs-12 col-sm-6 col-md-6">
                <div class="designedby pull-right">
                    <div class="footer-theme-credit"><a href="http://themes.nopaccelerate.com/themes/nopcommerce-core-theme/" target="_blank" title="Bootstrap Core Theme for nopCommerce">nopAccelerate Core Theme</a></div>
                    <div class="footer-designedby">Theme by <a target="_blank" href="http://www.nopaccelerate.com/">nopAccelerate</a></div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 footer-store-theme">
                @await Component.InvokeAsync("StoreThemeSelector")
                <div class="footer-disclaimer">
                    @T("Content.CopyrightNotice", DateTime.Now.Year.ToString(), Model.StoreName)
                </div>
            </div>
        </div>
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer })
</div>

